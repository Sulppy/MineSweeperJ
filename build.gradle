plugins {
    id 'java'
    id 'application'
    id 'edu.sc.seis.launch4j' version '3.0.6'
    id 'com.gradleup.shadow' version '9.0.0-beta4'
}

group = 'MineSweeper'
version = '0.0.1-SNAPSHOT'
project.ext.lwjglVersion = "3.3.4"
project.ext.lwjgl3awtVersion = "0.1.8"
project.ext.jomlVersion = "1.10.7"
project.ext.qtjambiVersion = "6.7.3"

java {
    sourceCompatibility = JavaVersion.VERSION_21
}

import org.gradle.internal.os.OperatingSystem
switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        project.ext.lwjglNatives = "natives-linux"
        project.ext.qtNatives = "native-linux"
        def osArch = System.getProperty("os.arch")
        if (osArch.startsWith("arm") || osArch.startsWith("aarch64")) {
            project.ext.lwjglNatives += osArch.contains("64") || osArch.startsWith("armv8") ? "-arm64" : "-arm32"
            project.ext.qtNatives += osArch.contains("64") || osArch.startsWith("armv8") ? "-arm64" : "-arm32"
        }
        else if(osArch.startsWith("amd64")){
            project.ext.qtNatives += "-x64"
        }
        break
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = "natives-windows"
        def osArch = System.getProperty("os.arch")
        if(osArch.startsWith("amd64")){
            project.ext.qtNatives += "-x64"
        }
        break
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "io.qtjambi:qtjambi:${qtjambiVersion}"
    runtimeOnly "io.qtjambi:qtjambi-${qtNatives}:${qtjambiVersion}"
}

application {
    mainClass = 'Main'
}

shadowJar{
    manifest {
        attributes 'Main-Class': application.mainClass
    }
}

launch4j{
    mainClassName = application.mainClass
    requires64Bit = true
    copyConfigurable = []
    jarTask = project.tasks.shadowJar
}